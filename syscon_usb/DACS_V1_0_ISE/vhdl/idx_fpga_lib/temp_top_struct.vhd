-- VHDL Entity idx_fpga_lib.temp_top.symbol
--
-- Created:
--          by - nort.Domain Users (NORT-XPS14)
--          at - 13:49:29 05/09/15
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY temp_top IS
  GENERIC( 
    BASE_ADDR : unsigned (15 DOWNTO 0) := X"0000"
  );
  PORT( 
    Addr   : IN     std_logic_vector (15 DOWNTO 0);
    ExpRd  : IN     std_logic;
    ExpWr  : IN     std_logic;
    F8M    : IN     std_logic;
    rst    : IN     std_logic;                       -- sync high
    ExpAck : OUT    std_ulogic;
    RData  : OUT    std_logic_vector (15 DOWNTO 0);
    scl    : INOUT  std_logic;
    sda    : INOUT  std_logic
  );

-- Declarations

END ENTITY temp_top ;

--
-- VHDL Architecture idx_fpga_lib.temp_top.struct
--
-- Created:
--          by - nort.Domain Users (NORT-XPS14)
--          at - 15:40:08 05/08/15
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--

-- Generation properties:
--   Component declarations : yes
--   Configurations         : embedded statements
--                          : add pragmas
--                          : exclude view name
--   
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY idx_fpga_lib;

ARCHITECTURE struct OF temp_top IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL BdEn      : std_ulogic;
  SIGNAL RdEn      : std_ulogic;
  SIGNAL Sensor    : std_logic_vector(2 DOWNTO 0);
  SIGNAL Word      : std_logic_vector(1 DOWNTO 0);
  SIGNAL ack       : std_logic;
  SIGNAL brd_num   : std_logic_vector(2 DOWNTO 0);
  SIGNAL rd_data_o : std_logic_vector(31 DOWNTO 0);
  SIGNAL rdy       : std_logic;


  -- Component Declarations
  COMPONENT subbus_io
  PORT (
    ExpRd  : IN     std_ulogic ;
    ExpWr  : IN     std_ulogic ;
    ExpAck : OUT    std_ulogic ;
    F8M    : IN     std_ulogic ;
    RdEn   : OUT    std_ulogic ;
    WrEn   : OUT    std_ulogic ;
    BdEn   : IN     std_ulogic 
  );
  END COMPONENT subbus_io;
  COMPONENT temp_acquire
  PORT (
    ack       : IN     std_logic ;
    clk_8M    : IN     std_logic ;
    rst       : IN     std_logic ;
    brd_num   : OUT    std_logic_vector (2 DOWNTO 0);
    rd_data_o : OUT    std_logic_vector (31 DOWNTO 0);
    rdy       : OUT    std_logic ;
    scl       : INOUT  std_logic ;
    sda       : INOUT  std_logic 
  );
  END COMPONENT temp_acquire;
  COMPONENT temp_addr
  GENERIC (
    BASE_ADDR : unsigned (15 DOWNTO 0) := X"0000"
  );
  PORT (
    Addr   : IN     std_logic_vector (15 DOWNTO 0);
    ExpRd  : IN     std_logic ;
    F8M    : IN     std_logic ;
    rst    : IN     std_logic ;
    BdEn   : OUT    std_ulogic ;
    Sensor : OUT    std_logic_vector (2 DOWNTO 0);
    Word   : OUT    std_logic_vector (1 DOWNTO 0)
  );
  END COMPONENT temp_addr;
  COMPONENT temp_avg
  PORT (
    F8M       : IN     std_logic ;
    RdEn      : IN     std_ulogic ;
    Sensor    : IN     std_logic_vector (2 DOWNTO 0);
    Word      : IN     std_logic_vector (1 DOWNTO 0);
    brd_num   : IN     std_logic_vector (2 DOWNTO 0);
    rd_data_o : IN     std_logic_vector (31 DOWNTO 0);
    rdy       : IN     std_logic ;
    rst       : IN     std_logic ;
    RData     : OUT    std_logic_vector (15 DOWNTO 0);
    ack       : OUT    std_logic 
  );
  END COMPONENT temp_avg;

  -- Optional embedded configurations
  -- pragma synthesis_off
  FOR ALL : subbus_io USE ENTITY idx_fpga_lib.subbus_io;
  FOR ALL : temp_acquire USE ENTITY idx_fpga_lib.temp_acquire;
  FOR ALL : temp_addr USE ENTITY idx_fpga_lib.temp_addr;
  FOR ALL : temp_avg USE ENTITY idx_fpga_lib.temp_avg;
  -- pragma synthesis_on


BEGIN

  -- Instance port mappings.
  subbus : subbus_io
    PORT MAP (
      ExpRd  => ExpRd,
      ExpWr  => ExpWr,
      ExpAck => ExpAck,
      F8M    => F8M,
      RdEn   => RdEn,
      WrEn   => OPEN,
      BdEn   => BdEn
    );
  U_0 : temp_acquire
    PORT MAP (
      ack       => ack,
      clk_8M    => F8M,
      rst       => rst,
      brd_num   => brd_num,
      rd_data_o => rd_data_o,
      rdy       => rdy,
      scl       => scl,
      sda       => sda
    );
  tmp_addr : temp_addr
    GENERIC MAP (
      BASE_ADDR => BASE_ADDR
    )
    PORT MAP (
      Addr   => Addr,
      ExpRd  => ExpRd,
      F8M    => F8M,
      rst    => rst,
      BdEn   => BdEn,
      Sensor => Sensor,
      Word   => Word
    );
  avg : temp_avg
    PORT MAP (
      F8M       => F8M,
      RdEn      => RdEn,
      Sensor    => Sensor,
      Word      => Word,
      brd_num   => brd_num,
      rd_data_o => rd_data_o,
      rdy       => rdy,
      rst       => rst,
      RData     => RData,
      ack       => ack
    );

END ARCHITECTURE struct;
