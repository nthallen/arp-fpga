--
-- VHDL Test Bench idx_fpga_lib.bench_ana_s16.ana_s16_tester
--
-- Created:
--          by - nort.UNKNOWN (NORT-NBX200T)
--          at - 15:12:53 10/15/2010
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY bench_ana_s16 IS
END bench_ana_s16;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
LIBRARY idx_fpga_lib;
-- USE idx_fpga_lib.ALL;


ARCHITECTURE rtl OF bench_ana_s16 IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CLK   : std_logic;
   SIGNAL DO    : std_ulogic_vector(15 DOWNTO 0);
   SIGNAL RDY   : std_ulogic;
   SIGNAL RST   : std_logic;
   SIGNAL SCK   : std_ulogic;
   SIGNAL SDI   : std_ulogic;
   SIGNAL Start : std_ulogic;
   SIGNAL Done  : std_ulogic;


   -- Component declarations
   COMPONENT ana_s16
      PORT (
         CLK   : IN     std_logic;
         DO    : OUT    std_ulogic_vector(15 DOWNTO 0);
         RDY   : OUT    std_ulogic;
         RST   : IN     std_logic;
         SCK   : OUT    std_ulogic;
         SDI   : IN     std_ulogic;
         Start : IN     std_ulogic
      );
   END COMPONENT;

   -- embedded configurations
   -- pragma synthesis_off
   FOR U_0 : ana_s16 USE ENTITY idx_fpga_lib.ana_s16;
   -- pragma synthesis_on

BEGIN

   U_0 : ana_s16
      PORT MAP (
         CLK   => CLK,
         DO    => DO,
         RDY   => RDY,
         RST   => RST,
         SCK   => SCK,
         SDI   => SDI,
         Start => Start
      );

  clock : Process
  Begin
    clk <= '0';
    -- pragma synthesis_off
    wait for 40 ns;
    while Done = '0' loop
      clk <= '0';
      wait for 16 ns;
      clk <= '1';
      wait for 17 ns;
    end loop;
    wait;
    -- pragma synthesis_on
  End Process;

  test_proc : Process
    Procedure check(DI : IN std_ulogic_vector(15 DOWNTO 0)) IS
      -- pragma synthesis_off
      Variable BN : integer;
      -- pragma synthesis_on
    Begin
      Start <= '1';
      -- pragma synthesis_off
      BN := 16;
      while BN > 0 loop
        wait until SCK'Event AND SCK = '1';
        Start <= '0';
        BN := BN-1;
        SDI <= DI(BN);
      end loop;
      assert RDY = '1' report "RDY should be high" severity error;
      wait until SCK'Event AND SCK = '1';
      wait until CLK'Event AND CLK = '1';
      assert DO = DI report "Read value incorrect" severity error;
      -- pragma synthesis_on
      return;
    End Procedure;
  Begin
    Done <= '0';
    SDI <= '0';
    Start <= '0';
    rst <= '1';
    -- pragma synthesis_off
    wait until clk'Event AND clk = '1';
    rst <= '0';
    wait until clk'Event AND clk = '1';
    wait until clk'Event AND clk = '1';
    wait until clk'Event AND clk = '1';
    wait until clk'Event AND clk = '1';
    Start <= '1';
    wait until clk'Event AND clk = '1';
    Start <= '0';
    wait until clk'Event AND clk = '1';
    wait until RDY = '1';
    Start <= '1';
    SDI <= '1';
    wait until RDY = '0';
    Start <= '0';
    wait until RDY = '1';
    check(X"55AA");
    check(X"1234");
    Done <= '1';
    wait;
    -- pragma synthesis_on
  End Process;



END rtl;