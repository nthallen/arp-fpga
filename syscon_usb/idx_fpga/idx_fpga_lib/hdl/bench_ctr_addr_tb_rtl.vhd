--
-- VHDL Test Bench idx_fpga_lib.bench_ctr_addr.ctr_addr_tester
--
-- Created:
--          by - nort.UNKNOWN (NORT-NBX200T)
--          at - 11:10:16 10/ 1/2010
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY bench_ctr_addr IS
   GENERIC (
      BASE_ADDRESS : std_logic_vector (15 DOWNTO 0) := X"0600";
      N_COUNTERS   : integer range 4 downto 4       := 4
   );
END bench_ctr_addr;


LIBRARY idx_fpga_lib;
USE idx_fpga_lib.ALL;


ARCHITECTURE rtl OF bench_ctr_addr IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Addr    : std_logic_vector(15 DOWNTO 0);
   SIGNAL StatEn  : std_ulogic;
   SIGNAL RevEn   : std_ulogic;
   SIGNAL CtrEn   : natural range N_COUNTERS-1 DOWNTO 0;
   SIGNAL CtrsEn  : std_ulogic;
   SIGNAL CtrEnHW : std_ulogic;
   SIGNAL BdEn    : std_ulogic;


   -- Component declarations
   COMPONENT ctr_addr
      GENERIC (
         BASE_ADDRESS : std_logic_vector (15 DOWNTO 0) := X"0600";
         N_COUNTERS   : integer range 4 downto 4       := 4
      );
      PORT (
         Addr    : IN     std_logic_vector(15 DOWNTO 0);
         StatEn  : OUT    std_ulogic;
         RevEn   : OUT    std_ulogic;
         CtrEn   : OUT    natural range N_COUNTERS-1 DOWNTO 0;
         CtrsEn  : OUT    std_ulogic;
         CtrEnHW : OUT    std_ulogic;
         BdEn    : OUT    std_ulogic
      );
   END COMPONENT;

   -- embedded configurations
   -- pragma synthesis_off
   FOR DUT_ctr_addr : ctr_addr USE ENTITY idx_fpga_lib.ctr_addr;
   -- pragma synthesis_on

BEGIN

   DUT_ctr_addr : ctr_addr
      GENERIC MAP (
         BASE_ADDRESS => BASE_ADDRESS,
         N_COUNTERS   => N_COUNTERS
      )
      PORT MAP (
         Addr    => Addr,
         StatEn  => StatEn,
         RevEn   => RevEn,
         CtrEn   => CtrEn,
         CtrsEn  => CtrsEn,
         CtrEnHW => CtrEnHW,
         BdEn    => BdEn
      );

   test_proc : Process
   begin
     Addr <= ( others => '0' );
     -- pragma synthesis_off
     wait for 250 ns;
     for n in 0 to 33 loop
       Addr <= CONV_STD_LOGIC_VECTOR(unsigned(BASE_ADDRESS) + n,16);
       wait for 250 ns;
     end loop;
     wait;
     -- pragma synthesis_on
   end process;


END rtl;