-- VHDL Entity idx_fpga_lib.bench_vm.symbol
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 11:47:27 07/27/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;



ENTITY bench_vm IS
-- Declarations

END ENTITY bench_vm ;

--
-- VHDL Architecture idx_fpga_lib.bench_vm.struct
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 11:47:27 07/27/2016
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--

-- Generation properties:
--   Component declarations : yes
--   Configurations         : embedded statements
--                          : add pragmas
--                          : exclude view name
--   
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_arith.ALL;

LIBRARY idx_fpga_lib;

ARCHITECTURE struct OF bench_vm IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL Addr   : std_logic_vector(15 DOWNTO 0);
  SIGNAL ExpAck : std_ulogic;
  SIGNAL ExpRd  : std_ulogic;
  SIGNAL F8M    : std_ulogic;
  SIGNAL SCL    : std_logic;
  SIGNAL SDA    : std_logic;
  SIGNAL rData  : std_logic_vector(15 DOWNTO 0);
  SIGNAL rdata1 : std_logic_vector(7 DOWNTO 0) := X"00";
  SIGNAL rdata2 : std_logic_vector(7 DOWNTO 0) := X"00";
  SIGNAL rst    : std_ulogic;
  SIGNAL wdata  : std_ulogic_vector(7 DOWNTO 0);
  SIGNAL wdata1 : std_ulogic_vector(7 DOWNTO 0);


  -- Component Declarations
  COMPONENT i2c_slave
  GENERIC (
    I2C_ADDR : std_logic_vector(6 DOWNTO 0) := "1000000"
  );
  PORT (
    clk   : IN     std_ulogic ;
    rdata : IN     std_logic_vector (7 DOWNTO 0);
    rst   : IN     std_ulogic ;
    scl   : IN     std_logic ;
    WE    : OUT    std_logic ;
    start : OUT    std_ulogic ;
    wdata : OUT    std_ulogic_vector (7 DOWNTO 0);
    RE    : INOUT  std_logic ;
    sda   : INOUT  std_logic 
  );
  END COMPONENT i2c_slave;
  COMPONENT vm
  GENERIC (
    BASE_ADDR : unsigned(15 DOWNTO 0)        := X"0360";
    I2C_ADDR1 : std_logic_vector(6 DOWNTO 0) := "1101000";
    I2C_ADDR2 : std_logic_vector(6 DOWNTO 0) := "1101001"
  );
  PORT (
    Addr   : IN     std_logic_vector (15 DOWNTO 0);
    ExpRd  : IN     std_ulogic ;
    F8M    : IN     std_ulogic ;
    rst    : IN     std_ulogic ;
    ExpAck : OUT    std_ulogic ;
    rData  : OUT    std_logic_vector (15 DOWNTO 0);
    SCL    : INOUT  std_logic ;
    SDA    : INOUT  std_logic 
  );
  END COMPONENT vm;
  COMPONENT vm_tester
  PORT (
    ExpAck : IN     std_ulogic ;
    rData  : IN     std_logic_vector (15 DOWNTO 0);
    Addr   : OUT    std_logic_vector (15 DOWNTO 0);
    ExpRd  : OUT    std_ulogic ;
    F8M    : OUT    std_ulogic ;
    rst    : OUT    std_ulogic ;
    SCL    : INOUT  std_logic ;
    SDA    : INOUT  std_logic 
  );
  END COMPONENT vm_tester;

  -- Optional embedded configurations
  -- pragma synthesis_off
  FOR ALL : i2c_slave USE ENTITY idx_fpga_lib.i2c_slave;
  FOR ALL : vm USE ENTITY idx_fpga_lib.vm;
  FOR ALL : vm_tester USE ENTITY idx_fpga_lib.vm_tester;
  -- pragma synthesis_on


BEGIN

  -- Instance port mappings.
  vm_i2c_d0 : i2c_slave
    GENERIC MAP (
      I2C_ADDR => "1101000"
    )
    PORT MAP (
      clk   => F8M,
      rdata => rdata1,
      rst   => rst,
      scl   => SCL,
      WE    => OPEN,
      start => OPEN,
      wdata => wdata,
      RE    => OPEN,
      sda   => SDA
    );
  vm_i2c_d2 : i2c_slave
    GENERIC MAP (
      I2C_ADDR => "1101001"
    )
    PORT MAP (
      clk   => F8M,
      rdata => rdata2,
      rst   => rst,
      scl   => SCL,
      WE    => OPEN,
      start => OPEN,
      wdata => wdata1,
      RE    => OPEN,
      sda   => SDA
    );
  vm_i : vm
    GENERIC MAP (
      BASE_ADDR => X"0360",
      I2C_ADDR1 => "1101000",
      I2C_ADDR2 => "1101001"
    )
    PORT MAP (
      Addr   => Addr,
      ExpRd  => ExpRd,
      F8M    => F8M,
      rst    => rst,
      ExpAck => ExpAck,
      rData  => rData,
      SCL    => SCL,
      SDA    => SDA
    );
  tester : vm_tester
    PORT MAP (
      ExpAck => ExpAck,
      rData  => rData,
      Addr   => Addr,
      ExpRd  => ExpRd,
      F8M    => F8M,
      rst    => rst,
      SCL    => SCL,
      SDA    => SDA
    );

END ARCHITECTURE struct;
