--
-- VHDL Test Bench idx_fpga_lib.bench_DigIO_Addr.DigIO_Addr_tester
--
-- Created:
--          by - nort.UNKNOWN (NORT-NBX200T)
--          at - 08:35:00 09/22/2010
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY bench_DigIO_Addr IS
   GENERIC (
      BASE_ADDRESS : std_logic_vector (15 DOWNTO 0) := X"0800";
      N_CONNECTORS : integer range 4 DOWNTO 1       := 2
   );
END bench_DigIO_Addr;


LIBRARY idx_fpga_lib;
USE idx_fpga_lib.ALL;


ARCHITECTURE rtl OF bench_DigIO_Addr IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Addr   : std_logic_vector(15 DOWNTO 0);
   SIGNAL ConnEn : std_ulogic_vector(N_CONNECTORS-1 DOWNTO 0);
   SIGNAL PortEnLB : std_ulogic_vector(3 DOWNTO 0);
   SIGNAL PortEnHB : std_ulogic_vector(3 DOWNTO 0);
   SIGNAL RS : std_ulogic;
   SIGNAL BdEn : std_ulogic;

   COMPONENT DigIO_Addr
      GENERIC (
         BASE_ADDRESS : std_logic_vector (15 DOWNTO 0) := X"0800";
         N_CONNECTORS : integer range 4 DOWNTO 1       := 2
      );
      PORT (
         Addr   : IN     std_logic_vector(15 DOWNTO 0);
         ConnEn : OUT    std_ulogic_vector(N_CONNECTORS-1 DOWNTO 0);
         PortEnLB : OUT std_ulogic_vector (3 DOWNTO 0);
         PortEnHB : OUT std_ulogic_vector (3 DOWNTO 0);
         RS : OUT std_ulogic;
         BdEn   : OUT    std_ulogic
      );
   END COMPONENT;

   -- embedded configurations
   -- pragma synthesis_off
   FOR DUTDigIO_Addr : DigIO_Addr USE ENTITY idx_fpga_lib.DigIO_Addr;
   -- pragma synthesis_on

BEGIN

         DUTDigIO_Addr : DigIO_Addr
            GENERIC MAP (
               BASE_ADDRESS => BASE_ADDRESS,
               N_CONNECTORS => N_CONNECTORS
            )
            PORT MAP (
               Addr   => Addr,
               ConnEn => ConnEn,
               PortEnLB => PortEnLB,
               PortEnHB => PortEnHB,
               RS => RS,
               BdEn   => BdEn
            );

   test_proc : Process
   begin
     Addr <= ( others => '0' );
     -- pragma synthesis_off
     wait for 250 ns;
     for n in 0 to 68 loop
       Addr <= CONV_STD_LOGIC_VECTOR(unsigned(BASE_ADDRESS) + n,16);
       wait for 250 ns;
     end loop;
     wait;
     -- pragma synthesis_on
   end process;

END rtl;