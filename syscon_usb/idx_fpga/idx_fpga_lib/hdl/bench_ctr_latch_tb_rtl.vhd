--
-- VHDL Test Bench idx_fpga_lib.bench_ctr_latch.ctr_latch_tester
--
-- Created:
--          by - nort.UNKNOWN (NORT-NBX200T)
--          at - 11:22:31 09/30/2010
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY bench_ctr_latch IS
END bench_ctr_latch;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
LIBRARY idx_fpga_lib;
USE idx_fpga_lib.ALL;


ARCHITECTURE rtl OF bench_ctr_latch IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL clk    : std_logic;
   SIGNAL cntclr : std_logic;
   SIGNAL cnten  : std_logic;
   SIGNAL latch  : std_logic;
   SIGNAL regen  : std_logic;
   SIGNAL rst    : std_logic;
   SIGNAL Done   : std_logic;


   -- Component declarations
   COMPONENT ctr_latch
      PORT (
         clk    : IN     std_logic;
         cntclr : OUT    std_logic;
         cnten  : OUT    std_logic;
         latch  : IN     std_logic;
         regen  : OUT    std_logic;
         rst    : IN     std_logic
      );
   END COMPONENT;

   -- embedded configurations
   -- pragma synthesis_off
   FOR DUT_ctr_latch : ctr_latch USE ENTITY idx_fpga_lib.ctr_latch(fsm);
   -- pragma synthesis_on

BEGIN

   DUT_ctr_latch : ctr_latch
      PORT MAP (
         clk    => clk,
         cntclr => cntclr,
         cnten  => cnten,
         latch  => latch,
         regen  => regen,
         rst    => rst
      );

  clock : Process
  Begin
    clk <= '0';
    -- pragma synthesis_off
    wait for 40 ns;
    while Done = '0' loop
      clk <= '0';
      wait for 62.5 ns;
      clk <= '1';
      wait for 62.5 ns;
    end loop;
    wait;
    -- pragma synthesis_on
  End Process;
  
  test_proc : Process
  Begin
    Done <= '0';
    rst <= '1';
    latch <= '0';
    -- pragma synthesis_off
    wait for 300 ns;
    rst <= '0';
    wait for 1000 ns;
    wait until clk'Event AND clk = '1';
    latch <= '1';
    wait for 1000 ns;
    wait until clk'Event AND clk = '1';
    latch <= '0';
    wait for 1000 ns;
    wait until clk'Event AND clk = '1';
    latch <= '1';
    wait for 1000 ns;
    wait until clk'Event AND clk = '1';
    latch <= '0';
    wait for 1000 ns;
    Done <= '1';
    wait;
    -- pragma synthesis_on
  End Process;


END rtl;