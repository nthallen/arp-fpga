--
-- VHDL Test Bench idx_fpga_lib.bench_syscon_tick_tb.syscon_tick_tester
--
-- Created:
--          by - nort.UNKNOWN (NORT-NBX200T)
--          at - 13:59:54 11/ 2/2010
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY bench_syscon_tick_tb IS
END bench_syscon_tick_tb;


LIBRARY idx_fpga_lib;


ARCHITECTURE rtl OF bench_syscon_tick_tb IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL TickTock    : std_ulogic;
   SIGNAL Arm_In      : std_ulogic;
   SIGNAL CmdEnbl_cmd : std_ulogic;
   SIGNAL CmdEnbl     : std_ulogic;
   SIGNAL TwoSecondTO : std_ulogic;
   SIGNAL Flt_CPU_Reset : std_ulogic;
   SIGNAL TwoMinuteTO : std_ulogic;
   SIGNAL F8M         : std_ulogic;
   SIGNAL Done        : std_ulogic;


   -- Component declarations
   COMPONENT syscon_tick
      GENERIC ( DEBUG_MULTIPLIER : integer := 1 );
      PORT (
         TickTock    : IN     std_ulogic;
         CmdEnbl_cmd : IN     std_ulogic;
         Arm_In      : IN     std_ulogic;
         CmdEnbl     : OUT    std_ulogic;
         TwoSecondTO : OUT    std_ulogic;
         Flt_CPU_Reset : OUT std_ulogic; -- 1sec reset pulse
         TwoMinuteTO : OUT    std_ulogic;
         F8M         : IN     std_ulogic
      );
   END COMPONENT;

   -- embedded configurations
   -- pragma synthesis_off
   FOR DUT_syscon_tick : syscon_tick USE ENTITY idx_fpga_lib.syscon_tick;
   -- pragma synthesis_on

BEGIN

   DUT_syscon_tick : syscon_tick
      GENERIC MAP ( DEBUG_MULTIPLIER => 100 )
      PORT MAP (
         TickTock    => TickTock,
         CmdEnbl_cmd => CmdEnbl_cmd,
         Arm_In      => Arm_In,
         CmdEnbl     => CmdEnbl,
         TwoSecondTO => TwoSecondTO,
         Flt_CPU_Reset => Flt_CPU_Reset,
         TwoMinuteTO => TwoMinuteTO,
         F8M         => F8M
      );


  f8m_clk : Process
  Begin
    F8M <= '0';
    -- pragma synthesis_off
    wait for 500 ns;
    while Done = '0' loop
      F8M <= '1';
      wait for 63 ns;
      F8M <= '0';
      wait for 62 ns;
    end loop;
    wait;
    -- pragma synthesis_on
  End Process;

  test_proc: Process
  Begin
    Done <= '0';
    TickTock <= '0';
    CmdEnbl_cmd <= '0';
    Arm_In <= '0';
    -- pragma synthesis_off
    wait for 500 ns;
    --
    -- First test a normal enable/timeout sequence
    --
    TickTock <= '1';
    Arm_In <= '1';
    wait for 3 us;
    CmdEnbl_cmd <= '1';
    wait for 3 us;
      assert CmdEnbl = '1' report "CmdEnbl not set" severity error;
    CmdEnbl_cmd <= '0';
    wait for 3 us;
      assert CmdEnbl = '0' report "CmdEnbl not reset" severity error;
    CmdEnbl_cmd <= '1';
    wait for 20 ms;
      assert CmdEnbl = '0'
        report "CmdEnbl did not trip"
        severity error;
      assert TwoSecondTO = '1'
        report "TwoSecondTO not set"
        severity error;
      assert Flt_CPU_Reset = '1'
        report "Flt_CPU_Reset not set"
        severity error;
    wait for 10 ms;
      assert Flt_CPU_Reset = '0'
        report "Flt_CPU_Reset did not reset"
        severity error;
      assert TwoSecondTO = '1'
        report "TwoSecondTO cleared w/o tick"
        severity error;
    --
    -- 30 ms: Now verify that late tick does not re-enable
    --
    TickTock <= not TickTock;
    wait for 500 ns;
      assert CmdEnbl = '0'
        report "CmdEnbl re-enabled by tick w/o reset"
        severity error;
      assert TwoSecondTO = '1'
        report "TwoSecondTO reset without intervening /CmdEnbl"
        severity error;
    wait for 20 ms; -- timeout again
      assert Flt_CPU_Reset = '0'
        report "Flt_CPU_Reset reissued without intervening /CmdEnbl"
        severity error;
    --
    -- 50 ms: Take CmdEnbl_cmd down to re-enable tick
    --
    CmdEnbl_cmd <= '0';
    wait for 500 ns;
      assert TwoSecondTO = '1'
        report "TwoSecondTO reset by /CmdEnbl w/o Tick"
        severity error;
    CmdEnbl_cmd <= '1';
    wait for 500 ns;
      assert TwoSecondTO = '1'
        report "TwoSecondTO reset w/o Tick"
        severity error;
      assert CmdEnbl = '0'
        report "CmdEnbl set w/o tick"
        severity error;
    --
    -- 50 ms+: Tick should go through now
    --
    TickTock <= not TickTock;
    wait for 500 ns;
      assert TwoSecondTO = '0'
        report "TwoSecondTO still set after arm/tick"
        severity error;
      assert CmdEnbl = '1'
        report "CmdEnbl not set on tick"
        severity error;
    
    --
    -- 50 ms++: Now try to disarm
    --
    Arm_In <= '0';
    wait for 20 ms;
      assert TwoSecondTO = '1'
        report "TwoSecondTO did not trip when Arm_In 0"
        severity error;
      assert Flt_CPU_Reset = '0'
        report "Flt_CPU_Reset tripped when Arm_In 0"
        severity error;
    --
    -- TwoMinuteTO should work even when Arm_in is 0
    --
    wait until TwoMinuteTO = '1' for 1200 ms;
      assert TwoMinuteTO = '1'
        report "TwoMinuteTO not set"
        severity error;
      assert CmdEnbl = '0'
        report "CmdEnbl did not trip"
        severity error;
      assert TwoSecondTO = '1'
        report "TwoSecondTO not set"
        severity error;
    Done <= '1';
    wait;
    -- pragma synthesis_on
  End Process;    

END rtl;