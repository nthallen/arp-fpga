--
-- VHDL Test Bench idx_fpga_lib.bench_ana_hwside.ana_hwside_tester
--
-- Created:
--          by - nort.UNKNOWN (NORT-NBX200T)
--          at - 15:49:31 10/27/2010
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY bench_ana_hwside IS
   GENERIC (
      DEF_CFG : std_logic_vector(8 DOWNTO 0) := "000010100"
   );
END bench_ana_hwside;


LIBRARY idx_fpga_lib;
-- USE idx_fpga_lib.ALL;


ARCHITECTURE rtl OF bench_ana_hwside IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CLK     : std_logic;
   SIGNAL RST     : std_logic;
   SIGNAL Row     : std_ulogic_vector(5 DOWNTO 0);
   SIGNAL CfgData : std_logic_vector(8 DOWNTO 0);
   SIGNAL AcqData : std_logic_vector(31 DOWNTO 0);
   SIGNAL RD_Addr : std_logic_vector(7 DOWNTO 0);
   SIGNAL WR_Addr : std_logic_vector(7 DOWNTO 0);
   SIGNAL RdEn    : std_ulogic;
   SIGNAL WrEn    : std_ulogic;
   SIGNAL RAM_BUSY : std_ulogic;
   SIGNAL RdyOut  : std_ulogic;
   SIGNAL Conv    : std_ulogic;
   SIGNAL CS5     : std_ulogic;
   SIGNAL SDI     : std_ulogic_vector(1 DOWNTO 0);
   SIGNAL SCK16   : std_ulogic_vector(1 DOWNTO 0);
   SIGNAL SDO     : std_ulogic_vector(1 DOWNTO 0);
   SIGNAL SCK5    : std_ulogic_vector(1 DOWNTO 0);
   SIGNAL Done    : std_ulogic;

   -- Component declarations
   COMPONENT ana_hwside
      GENERIC (
         DEF_CFG : std_logic_vector(8 DOWNTO 0) := "000010100"
      );
      PORT (
         CLK     : IN     std_logic;
         RST     : IN     std_logic;
         CfgData : IN std_logic_vector(8 DOWNTO 0);
         Row     : OUT std_ulogic_vector(5 DOWNTO 0);
         AcqData : OUT    std_logic_vector(31 DOWNTO 0);
         RD_Addr : OUT std_logic_vector(7 DOWNTO 0);
         WR_Addr : OUT std_logic_vector(7 DOWNTO 0);
         RdEn    : OUT std_ulogic;
         WrEn    : OUT std_ulogic;
         RdyOut  : OUT std_ulogic;
         RAM_Busy : OUT std_ulogic;
         Conv    : OUT    std_ulogic;
         CS5     : OUT    std_ulogic;
         SDI     : IN     std_ulogic_vector(1 DOWNTO 0);
         SCK16   : OUT    std_ulogic_vector(1 DOWNTO 0);
         SDO     : OUT    std_ulogic_vector(1 DOWNTO 0);
         SCK5    : OUT    std_ulogic_vector(1 DOWNTO 0)
      );
   END COMPONENT;
   COMPONENT mock_ad7687_chain
      PORT (
         SCK16 : IN     std_ulogic;
         Conv  : IN     std_ulogic;
         RST   : IN     std_ulogic;
         SDO   : OUT    std_ulogic;
         Row   : IN     std_ulogic_vector(2 DOWNTO 0);
         Bank  : IN     std_ulogic
      );
   END COMPONENT;

   -- embedded configurations
   -- pragma synthesis_off
   FOR DUT_ana_hwside : ana_hwside USE ENTITY idx_fpga_lib.ana_hwside;
   FOR ALL : mock_ad7687_chain USE ENTITY idx_fpga_lib.mock_ad7687_chain;
   -- pragma synthesis_on

BEGIN
  adbank0 : mock_ad7687_chain
    PORT MAP (
      SCK16 => SCK16(0),
      Conv  => Conv,
      RST   => RST,
      SDO   => SDI(0),
      Row   => Row(2 DOWNTO 0),
      Bank  => '0'
    );
  adbank1 : mock_ad7687_chain
    PORT MAP (
      SCK16 => SCK16(1),
      Conv  => Conv,
      RST   => RST,
      SDO   => SDI(1),
      Row   => Row(2 DOWNTO 0),
      Bank  => '1'
    );

  DUT_ana_hwside : ana_hwside
    GENERIC MAP (
       DEF_CFG => DEF_CFG
    )
    PORT MAP (
       CLK     => CLK,
       RST     => RST,
       Row     => Row,
       CfgData => CfgData,
       AcqData => AcqData,
       RD_Addr => RD_Addr,
       WR_Addr => WR_Addr,
       RdEn    => RdEn,
       WrEn    => WrEn,
       RAM_BUSY => RAM_BUSY,
       RdyOut  => RdyOut,
       Conv    => Conv,
       CS5     => CS5,
       SDI     => SDI,
       SCK16   => SCK16,
       SDO     => SDO,
       SCK5    => SCK5
    );

  -- Approximately 30 MHz (33ns period => 30.3MHz)
  clock : Process
  Begin
    CLK <= '0';
    -- pragma synthesis_off
    wait for 40 ns;
    while Done = '0' loop
      CLK <= '0';
      wait for 16 ns;
      CLK <= '1';
      wait for 17 ns;
    end loop;
    wait;
    -- pragma synthesis_on
  End Process;
  
  CfgData_p : Process (CLK) Is
  Begin
    if CLK'Event AND CLK = '1' then
      if RdEn = '1' then
        if RD_Addr = "00100100" then
          CfgData <= "100010100";
        elsif RD_Addr = "00111010" then
          CfgData <= "100111000";
        else
          CfgData <= "000010011";
        end if;
      end if;
    end if;
  End Process;

  test_proc : Process
    Procedure check_write IS
    Begin
      -- pragma synthesis_off
      wait until RdEn = '1' AND WrEn = '1';
      wait until CLK'Event AND CLK = '1';
      assert WR_Addr = AcqData(15 DOWNTO 8)
        report "Invalid addr bits in AcqData"
        severity error;
      assert AcqData(31 DOWNTO 25) = "0000000" OR AcqData(31 DOWNTO 25) = "0000000"
        report "Nonzero CfgData in readback"
        severity error;
      assert AcqData(24 DOWNTO 21) = "0000" OR AcqData(24) = '1'
        report "Invalid MuxCfg in readback"
        severity error;
      -- pragma synthesis_on
      return;
    End Procedure;
  Begin
    Done <= '0';
    RST <= '1';
    -- pragma synthesis_off
    wait for 200 ns;
    RST <= '0';
    for i in 0 to 16#100# loop
      check_write;
      check_write;
    end loop;
    Done <= '1';
    wait;
    -- pragma synthesis_on
  End Process;

END rtl;