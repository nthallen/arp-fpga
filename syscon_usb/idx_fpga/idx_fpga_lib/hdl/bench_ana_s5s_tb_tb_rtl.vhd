--
-- VHDL Test Bench idx_fpga_lib.bench_ana_s5s_tb.ana_s5s_tester
--
-- Created:
--          by - nort.UNKNOWN (NORT-NBX200T)
--          at - 13:15:09 10/15/2010
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2009.2 (Build 10)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;


ENTITY bench_ana_s5s_tb IS
END bench_ana_s5s_tb;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
LIBRARY idx_fpga_lib;
-- USE idx_fpga_lib.ALL;


ARCHITECTURE rtl OF bench_ana_s5s_tb IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL clk   : std_ulogic;
   SIGNAL DI    : std_logic_vector(8 DOWNTO 0);
   SIGNAL RDY   : std_ulogic;
   SIGNAL rst   : std_ulogic;
   SIGNAL SCK   : std_ulogic;
   SIGNAL SDO   : std_ulogic;
   SIGNAL Start : std_ulogic;
   SIGNAL Done  : std_ulogic;


   -- Component declarations
   COMPONENT ana_s5s
      PORT (
         clk   : IN     std_ulogic;
         DI    : IN     std_logic_vector(8 DOWNTO 0);
         RDY   : OUT    std_ulogic;
         rst   : IN     std_ulogic;
         SCK   : OUT    std_ulogic;
         SDO   : OUT    std_ulogic;
         Start : IN     std_ulogic
      );
   END COMPONENT;

   -- embedded configurations
   -- pragma synthesis_off
   FOR U_0 : ana_s5s USE ENTITY idx_fpga_lib.ana_s5s;
   -- pragma synthesis_on

BEGIN

   U_0 : ana_s5s
      PORT MAP (
         clk   => clk,
         DI    => DI,
         RDY   => RDY,
         rst   => rst,
         SCK   => SCK,
         SDO   => SDO,
         Start => Start
      );

  clock : Process
  Begin
    clk <= '0';
    -- pragma synthesis_off
    wait for 40 ns;
    while Done = '0' loop
      clk <= '0';
      wait for 16 ns;
      clk <= '1';
      wait for 17 ns;
    end loop;
    wait;
    -- pragma synthesis_on
  End Process;

  test_proc : Process
  Begin
    Done <= '0';
    DI <= "000011001";
    Start <= '0';
    rst <= '1';
    -- pragma synthesis_off
    wait until clk'Event AND clk = '1';
    rst <= '0';
    wait until clk'Event AND clk = '1';
    wait until clk'Event AND clk = '1';
    wait until clk'Event AND clk = '1';
    wait until clk'Event AND clk = '1';
    Start <= '1';
    wait until clk'Event AND clk = '1';
    Start <= '0';
    wait until RDY = '0';
    wait until RDY = '1';
    wait for 35 ns;
    DI <= "000001100";
    Start <= '1';
    wait until clk'Event AND clk = '1';
    Start <= '0';
    wait until RDY = '0';
    wait until RDY = '1';
    wait for 35 ns;
    Done <= '1';
    wait;
    -- pragma synthesis_on
  End Process;


END rtl;